<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.xc.dao.ILogOperationDAO">
  <resultMap id="BaseResultMap" type="cn.xc.entity.DO.LogOperationDO">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="op_user_id" jdbcType="BIGINT" property="opUserId" />
    <result column="op_user_identifier" jdbcType="BIGINT" property="opUserIdentifier" />
    <result column="op_ip" jdbcType="VARCHAR" property="opIp" />
    <result column="op_type" jdbcType="TINYINT" property="opType" />
    <result column="op_time" jdbcType="TIMESTAMP" property="opTime" />
    <result column="op_context" jdbcType="VARCHAR" property="opContext" />
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
    <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified" />
    <result column="is_deleted" jdbcType="TINYINT" property="isDeleted" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, op_user_id, op_user_identifier, op_ip, op_type, op_time, op_context, gmt_create, 
    gmt_modified, is_deleted
  </sql>

  <!--查操作-->
  <select id="selectByExample" parameterType="cn.xc.dao.condition.LogOperationExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from log_operation
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
      and is_deleted = 0
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from log_operation
    where id = #{id,jdbcType=BIGINT} and is_deleted = 0
  </select>
  <select id="countByExample" parameterType="cn.xc.dao.condition.LogOperationExample" resultType="java.lang.Long">
    select count(*) from log_operation
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
      and is_deleted = 0
    </if>
  </select>

  <!--删除操作-->
  <update id="deleteByPrimaryKey" parameterType="java.lang.Long">
    UPDATE log_operation SET is_deleted = 1, gmt_modified = NOW()
    where id = #{id,jdbcType=BIGINT} and is_deleted = 0
  </update>
  <update id="deleteByExample" parameterType="cn.xc.dao.condition.LogOperationExample">
    UPDATE log_operation SET is_deleted = 1, gmt_modified = NOW()
    <if test="_parameter != null">
      <include refid="Example_Where_Clause"/>
      and is_deleted = 0
    </if>
  </update>

  <!--新增操作-->
  <insert id="insert" parameterType="cn.xc.entity.DO.LogOperationDO">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into log_operation (op_user_id, op_user_identifier, op_ip, 
      op_type, op_time, op_context, 
      gmt_create, gmt_modified, is_deleted
      )
    values (#{opUserId,jdbcType=BIGINT}, #{opUserIdentifier,jdbcType=BIGINT}, #{opIp,jdbcType=VARCHAR}, 
      #{opType,jdbcType=TINYINT}, #{opTime,jdbcType=TIMESTAMP}, #{opContext,jdbcType=VARCHAR},
    NOW(), NOW(), 0
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.xc.entity.DO.LogOperationDO">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into log_operation
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="opUserId != null">
        op_user_id,
      </if>
      <if test="opUserIdentifier != null">
        op_user_identifier,
      </if>
      <if test="opIp != null">
        op_ip,
      </if>
      <if test="opType != null">
        op_type,
      </if>
      <if test="opTime != null">
        op_time,
      </if>
      <if test="opContext != null">
        op_context,
      </if>
        gmt_create,
        gmt_modified,
        is_deleted,
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="opUserId != null">
        #{opUserId,jdbcType=BIGINT},
      </if>
      <if test="opUserIdentifier != null">
        #{opUserIdentifier,jdbcType=BIGINT},
      </if>
      <if test="opIp != null">
        #{opIp,jdbcType=VARCHAR},
      </if>
      <if test="opType != null">
        #{opType,jdbcType=TINYINT},
      </if>
      <if test="opTime != null">
        #{opTime,jdbcType=TIMESTAMP},
      </if>
      <if test="opContext != null">
        #{opContext,jdbcType=VARCHAR},
      </if>
      NOW(), NOW(), 0
    </trim>
  </insert>

  <!--更新操作-->
  <update id="updateByExampleSelective" parameterType="map">
    update log_operation
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.opUserId != null">
        op_user_id = #{record.opUserId,jdbcType=BIGINT},
      </if>
      <if test="record.opUserIdentifier != null">
        op_user_identifier = #{record.opUserIdentifier,jdbcType=BIGINT},
      </if>
      <if test="record.opIp != null">
        op_ip = #{record.opIp,jdbcType=VARCHAR},
      </if>
      <if test="record.opType != null">
        op_type = #{record.opType,jdbcType=TINYINT},
      </if>
      <if test="record.opTime != null">
        op_time = #{record.opTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.opContext != null">
        op_context = #{record.opContext,jdbcType=VARCHAR},
      </if>
      gmt_modified = NOW(),
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
      and is_deleted = 0
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update log_operation
    set id = #{record.id,jdbcType=BIGINT},
      op_user_id = #{record.opUserId,jdbcType=BIGINT},
      op_user_identifier = #{record.opUserIdentifier,jdbcType=BIGINT},
      op_ip = #{record.opIp,jdbcType=VARCHAR},
      op_type = #{record.opType,jdbcType=TINYINT},
      op_time = #{record.opTime,jdbcType=TIMESTAMP},
      op_context = #{record.opContext,jdbcType=VARCHAR},
    gmt_modified = NOW()
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
      AND is_deleted = 0
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.xc.entity.DO.LogOperationDO">
    update log_operation
    <set>
      <if test="opUserId != null">
        op_user_id = #{opUserId,jdbcType=BIGINT},
      </if>
      <if test="opUserIdentifier != null">
        op_user_identifier = #{opUserIdentifier,jdbcType=BIGINT},
      </if>
      <if test="opIp != null">
        op_ip = #{opIp,jdbcType=VARCHAR},
      </if>
      <if test="opType != null">
        op_type = #{opType,jdbcType=TINYINT},
      </if>
      <if test="opTime != null">
        op_time = #{opTime,jdbcType=TIMESTAMP},
      </if>
      <if test="opContext != null">
        op_context = #{opContext,jdbcType=VARCHAR},
      </if>
      gmt_modified = NOW(),
    </set>
    where id = #{id,jdbcType=BIGINT} AND is_deleted = 0
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.xc.entity.DO.LogOperationDO">
    update log_operation
    set op_user_id = #{opUserId,jdbcType=BIGINT},
      op_user_identifier = #{opUserIdentifier,jdbcType=BIGINT},
      op_ip = #{opIp,jdbcType=VARCHAR},
      op_type = #{opType,jdbcType=TINYINT},
      op_time = #{opTime,jdbcType=TIMESTAMP},
      op_context = #{opContext,jdbcType=VARCHAR},
    gmt_modified = NOW()
    where id = #{id,jdbcType=BIGINT} AND is_deleted = 0
  </update>
</mapper>