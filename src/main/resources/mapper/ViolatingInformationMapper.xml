<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.xc.entity.DO.ViolatingInformationDOMapper">
    <resultMap id="BaseResultMap" type="cn.xc.entity.DO.ViolatingInformationDO">
        <id column="id" jdbcType="BIGINT" property="id" />
        <result column="identifier" jdbcType="VARCHAR" property="identifier" />
        <result column="violation_type" jdbcType="TINYINT" property="violationType" />
        <result column="violation_time" jdbcType="DATE" property="violationTime" />
        <result column="detail" jdbcType="VARCHAR" property="detail" />
        <result column="car_number" jdbcType="VARCHAR" property="carNumber" />
        <result column="penalty_point" jdbcType="TINYINT" property="penaltyPoint" />
        <result column="penalty_money" jdbcType="DECIMAL" property="penaltyMoney" />
        <result column="gmt_create" jdbcType="DATE" property="gmtCreate" />
        <result column="gmt_modified" jdbcType="DATE" property="gmtModified" />
        <result column="is_deleted" jdbcType="TINYINT" property="isDeleted" />
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
          <foreach collection="oredCriteria" item="criteria" separator="or">
            <if test="criteria.valid">
              <trim prefix="(" prefixOverrides="and" suffix=")">
                <foreach collection="criteria.criteria" item="criterion">
                  <choose>
                    <when test="criterion.noValue">
                      and ${criterion.condition}
                    </when>
                    <when test="criterion.singleValue">
                      and ${criterion.condition} #{criterion.value}
                    </when>
                    <when test="criterion.betweenValue">
                      and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                    </when>
                    <when test="criterion.listValue">
                      and ${criterion.condition}
                      <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                        #{listItem}
                      </foreach>
                    </when>
                  </choose>
                </foreach>
              </trim>
            </if>
          </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
    </sql>
    <sql id="Base_Column_List">
        id, identifier, violation_type, violation_time, detail, car_number, penalty_point,
        penalty_money, gmt_create, gmt_modified, is_deleted
    </sql>
    <sql id="Insert_column_list_loop_value">
        #{data.identifier,jdbcType=VARCHAR}, #{data.violationType,jdbcType=TINYINT},
        #{data.violationTime,jdbcType=DATE}, #{data.detail,jdbcType=VARCHAR}, #{data.carNumber,jdbcType=VARCHAR},
        #{data.penaltyPoint,jdbcType=TINYINT}, #{data.penaltyMoney,jdbcType=DECIMAL}
    </sql>
    <select id="selectByExample" parameterType="cn.xc.entity.DO.ViolatingInformationDO" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from violation_information
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
    </select>
    <select id="getDataByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from violation_information
    where id = #{id,jdbcType=BIGINT}
    </select>

    <update id="deleteDataByPrimaryKey" parameterType="java.lang.Long">
    UPDATE violation_information SET is_deleted = 1, gmt_modified = NOW() WHERE id = #{id}
    </update>
    <update id="deleteByExample" parameterType="cn.xc.entity.DO.ViolatingInformationDO">
      UPDATE violation_information SET is_deleted = 1, gmt_modified = NOW()
      <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </update>
    <update id="deleteDataByList" parameterType="java.util.List">
        UPDATE violation_information SET is_deleted = 1, gmt_modified = NOW() WHERE id IN
        <foreach collection="list" item="data" open="(" separator="," close=")">
            #{data}
        </foreach>
        AND is_deleted = 0
    </update>
    <insert id="insertData" parameterType="cn.xc.entity.DO.ViolatingInformationDO">
        insert into violation_information (identifier, violation_type,
          violation_time, detail, car_number,
          penalty_point, penalty_money, gmt_create,
          gmt_modified, is_deleted)
        values (#{identifier,jdbcType=VARCHAR}, #{violationType,jdbcType=TINYINT},
          #{violationTime,jdbcType=DATE}, #{detail,jdbcType=VARCHAR}, #{carNumber,jdbcType=VARCHAR},
          #{penaltyPoint,jdbcType=TINYINT}, #{penaltyMoney,jdbcType=DECIMAL}, NOW(),NOW(), 0)
    </insert>
    <insert id="insertDataByList" parameterType="cn.xc.entity.DO.ViolatingInformationDO">
        insert into violation_information (identifier, violation_type,
        violation_time, detail, car_number,
        penalty_point, penalty_money, gmt_create,
        gmt_modified, is_deleted)
        values
        <foreach collection="list" item="data" separator=",">
            (<include refid="Insert_column_list_loop_value"/>,NOW(),NOW(),0)
        </foreach>
    </insert>

    <insert id="insertSelective" parameterType="cn.xc.entity.DO.ViolatingInformationDO">
    insert into violation_information
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="identifier != null">
        identifier,
      </if>
      <if test="violationType != null">
        violation_type,
      </if>
      <if test="violationTime != null">
        violation_time,
      </if>
      <if test="detail != null">
        detail,
      </if>
      <if test="carNumber != null">
        car_number,
      </if>
      <if test="penaltyPoint != null">
        penalty_point,
      </if>
      <if test="penaltyMoney != null">
        penalty_money,
      </if>
        gmt_create,
        gmt_modified,
        is_deleted,
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="identifier != null">
        #{identifier,jdbcType=VARCHAR},
      </if>
      <if test="violationType != null">
        #{violationType,jdbcType=TINYINT},
      </if>
      <if test="violationTime != null">
        #{violationTime,jdbcType=DATE},
      </if>
      <if test="detail != null">
        #{detail,jdbcType=VARCHAR},
      </if>
      <if test="carNumber != null">
        #{carNumber,jdbcType=VARCHAR},
      </if>
      <if test="penaltyPoint != null">
        #{penaltyPoint,jdbcType=TINYINT},
      </if>
      <if test="penaltyMoney != null">
        #{penaltyMoney,jdbcType=DECIMAL},
      </if>
        NOW(),NOW(), 0
    </trim>
    </insert>

    <select id="countByExample" parameterType="cn.xc.entity.DO.ViolatingInformationDO" resultType="java.lang.Long">
    select count(*) from violation_information
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>

    <update id="updateByExampleSelective" parameterType="map">
    update violation_information
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.identifier != null">
        identifier = #{record.identifier,jdbcType=VARCHAR},
      </if>
      <if test="record.violationType != null">
        violation_type = #{record.violationType,jdbcType=TINYINT},
      </if>
      <if test="record.violationTime != null">
        violation_time = #{record.violationTime,jdbcType=DATE},
      </if>
      <if test="record.detail != null">
        detail = #{record.detail,jdbcType=VARCHAR},
      </if>
      <if test="record.carNumber != null">
        car_number = #{record.carNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.penaltyPoint != null">
        penalty_point = #{record.penaltyPoint,jdbcType=TINYINT},
      </if>
      <if test="record.penaltyMoney != null">
        penalty_money = #{record.penaltyMoney,jdbcType=DECIMAL},
      </if>
        gmt_modified = NOW(),
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    </update>
    <update id="updateByExample" parameterType="map">
    update violation_information
    set id = #{record.id,jdbcType=BIGINT},
      identifier = #{record.identifier,jdbcType=VARCHAR},
      violation_type = #{record.violationType,jdbcType=TINYINT},
      violation_time = #{record.violationTime,jdbcType=DATE},
      detail = #{record.detail,jdbcType=VARCHAR},
      car_number = #{record.carNumber,jdbcType=VARCHAR},
      penalty_point = #{record.penaltyPoint,jdbcType=TINYINT},
      penalty_money = #{record.penaltyMoney,jdbcType=DECIMAL},
      gmt_create = #{record.gmtCreate,jdbcType=DATE},
      gmt_modified = #{record.gmtModified,jdbcType=DATE},
      is_deleted = #{record.isDeleted,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    </update>
    <update id="updateDataSelective" parameterType="cn.xc.entity.DO.ViolatingInformationDO">
    update violation_information
    <set>
      <if test="identifier != null">
        identifier = #{identifier,jdbcType=VARCHAR},
      </if>
      <if test="violationType != null">
        violation_type = #{violationType,jdbcType=TINYINT},
      </if>
      <if test="violationTime != null">
        violation_time = #{violationTime,jdbcType=DATE},
      </if>
      <if test="detail != null">
        detail = #{detail,jdbcType=VARCHAR},
      </if>
      <if test="carNumber != null">
        car_number = #{carNumber,jdbcType=VARCHAR},
      </if>
      <if test="penaltyPoint != null">
        penalty_point = #{penaltyPoint,jdbcType=TINYINT},
      </if>
      <if test="penaltyMoney != null">
        penalty_money = #{penaltyMoney,jdbcType=DECIMAL},
      </if>
        gmt_modified = NOW(),
    </set>
    where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateDataSelective" parameterType="cn.xc.entity.DO.ViolatingInformationDO">
      <foreach collection="list" item="data" separator=";">
          update violation_information
          <set>
              <if test="identifier != null">
                  identifier = #{data.identifier,jdbcType=VARCHAR},
              </if>
              <if test="violationType != null">
                  violation_type = #{data.violationType,jdbcType=TINYINT},
              </if>
              <if test="violationTime != null">
                  violation_time = #{data.violationTime,jdbcType=DATE},
              </if>
              <if test="detail != null">
                  detail = #{data.detail,jdbcType=VARCHAR},
              </if>
              <if test="carNumber != null">
                  car_number = #{data.carNumber,jdbcType=VARCHAR},
              </if>
              <if test="penaltyPoint != null">
                  penalty_point = #{data.penaltyPoint,jdbcType=TINYINT},
              </if>
              <if test="penaltyMoney != null">
                  penalty_money = #{data.penaltyMoney,jdbcType=DECIMAL},
              </if>
              gmt_modified = NOW(),
          </set>
          where id = #{data.id,jdbcType=BIGINT} AND is_deleted = 0
      </foreach>
    </update>
    <update id="updateData" parameterType="cn.xc.entity.DO.ViolatingInformationDO">
    update violation_information
    set identifier = #{identifier,jdbcType=VARCHAR},
      violation_type = #{violationType,jdbcType=TINYINT},
      violation_time = #{violationTime,jdbcType=DATE},
      detail = #{detail,jdbcType=VARCHAR},
      car_number = #{carNumber,jdbcType=VARCHAR},
      penalty_point = #{penaltyPoint,jdbcType=TINYINT},
      penalty_money = #{penaltyMoney,jdbcType=DECIMAL},
      gmt_modified = NOW()
    where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateDataByList" parameterType="cn.xc.entity.DO.ViolatingInformationDO">
        <foreach collection="list" item="data" separator=";">
            update violation_information
            set identifier = #{data.identifier,jdbcType=VARCHAR},
            violation_type = #{data.violationType,jdbcType=TINYINT},
            violation_time = #{data.violationTime,jdbcType=DATE},
            detail = #{data.detail,jdbcType=VARCHAR},
            car_number = #{data.carNumber,jdbcType=VARCHAR},
            penalty_point = #{data.penaltyPoint,jdbcType=TINYINT},
            penalty_money = #{data.penaltyMoney,jdbcType=DECIMAL},
            gmt_modified = NOW()
            where id = #{data.id,jdbcType=BIGINT} AND is_deleted = 0
        </foreach>
    </update>

    <select id="findAll" resultMap="BaseResultMap">
        SELECT * FROM violation_information WHERE is_deleted = 0
    </select>
    <select id="getDataByGmtCreateBetween" resultMap="BaseResultMap">
        SELECT * FROM violation_information WHERE gmt_create BETWEEN #{start} AND #{end} AND is_deleted = 0
    </select>
    <select id="getDataByGmtModifiedBetween" resultMap="BaseResultMap">
        SELECT * FROM violation_information WHERE gmt_modified BETWEEN #{start} AND #{end} AND is_deleted = 0
    </select>
    <select id="getDataByIsDeleted" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        SELECT * FROM violation_information WHERE is_deleted = 1
    </select>
</mapper>