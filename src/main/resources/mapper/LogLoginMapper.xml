<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.xc.dao.ILogLoginDAO">
  <resultMap id="BaseResultMap" type="cn.xc.entity.DO.LogLoginDO">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="login_user_id" jdbcType="BIGINT" property="loginUserId" />
    <result column="login_ip" jdbcType="VARCHAR" property="loginIp" />
    <result column="login_time" jdbcType="TIMESTAMP" property="loginTime" />
    <result column="login_user_identifier" jdbcType="VARCHAR" property="loginUserIdentifier" />
    <result column="is_admin" jdbcType="TINYINT" property="isAdmin" />
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
    <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified" />
    <result column="is_deleted" jdbcType="TINYINT" property="isDeleted" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, login_user_id, login_ip, login_time, login_user_identifier, is_admin, gmt_create, 
    gmt_modified, is_deleted
  </sql>

    <!--查操作-->
  <select id="selectByExample" parameterType="cn.xc.dao.condition.LogLoginExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from log_login
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
        AND is_deleted = 0
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from log_login
      where id = #{id,jdbcType=BIGINT} and is_deleted = 0
  </select>
    <select id="countByExample" parameterType="cn.xc.dao.condition.LogLoginExample" resultType="java.lang.Long">
        select count(*) from log_login
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
        and is_deleted = 0;
    </if>
    </select>

    <!--删除操作-->
    <update id="deleteByPrimaryKey" parameterType="java.lang.Long">
    UPDATE log_login SET is_deleted = 1, gmt_modified = NOW() where id = #{id,jdbcType=BIGINT} and is_deleted = 0
  </update>
    <update id="deleteByExample" parameterType="cn.xc.dao.condition.LogLoginExample">
        UPDATE log_login SET is_deleted = 1, gmt_modified = NOW()
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
            and is_deleted = 0
        </if>
    </update>

    <!--新增操作-->
  <insert id="insert" parameterType="cn.xc.entity.DO.LogLoginDO">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into log_login (login_user_id, login_ip, login_time, 
      login_user_identifier, is_admin, gmt_create, 
      gmt_modified, is_deleted)
    values (#{loginUserId,jdbcType=BIGINT}, #{loginIp,jdbcType=VARCHAR}, #{loginTime,jdbcType=TIMESTAMP},
      #{loginUserIdentifier,jdbcType=VARCHAR}, #{isAdmin,jdbcType=TINYINT}, NOW(),
      NOW(), 0)
  </insert>
  <insert id="insertSelective" parameterType="cn.xc.entity.DO.LogLoginDO">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into log_login
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="loginUserId != null">
        login_user_id,
      </if>
      <if test="loginIp != null">
        login_ip,
      </if>
      <if test="loginTime != null">
        login_time,
      </if>
      <if test="loginUserIdentifier != null">
        login_user_identifier,
      </if>
      <if test="isAdmin != null">
        is_admin,
      </if>
        gmt_create,
        gmt_modified,
        is_deleted,
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="loginUserId != null">
        #{loginUserId,jdbcType=BIGINT},
      </if>
      <if test="loginIp != null">
        #{loginIp,jdbcType=VARCHAR},
      </if>
      <if test="loginTime != null">
        #{loginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="loginUserIdentifier != null">
        #{loginUserIdentifier,jdbcType=VARCHAR},
      </if>
      <if test="isAdmin != null">
        #{isAdmin,jdbcType=TINYINT},
      </if>
        NOW(),
        NOW(),
        0,
    </trim>
  </insert>

    <!--更新操作-->
  <update id="updateByExampleSelective" parameterType="map">
    update log_login
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.loginUserId != null">
        login_user_id = #{record.loginUserId,jdbcType=BIGINT},
      </if>
      <if test="record.loginIp != null">
        login_ip = #{record.loginIp,jdbcType=VARCHAR},
      </if>
      <if test="record.loginTime != null">
        login_time = #{record.loginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.loginUserIdentifier != null">
        login_user_identifier = #{record.loginUserIdentifier,jdbcType=VARCHAR},
      </if>
      <if test="record.isAdmin != null">
        is_admin = #{record.isAdmin,jdbcType=TINYINT},
      </if>
        gmt_modified = NOW(),
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update log_login
    set id = #{record.id,jdbcType=BIGINT},
      login_user_id = #{record.loginUserId,jdbcType=BIGINT},
      login_ip = #{record.loginIp,jdbcType=VARCHAR},
      login_time = #{record.loginTime,jdbcType=TIMESTAMP},
      login_user_identifier = #{record.loginUserIdentifier,jdbcType=VARCHAR},
      is_admin = #{record.isAdmin,jdbcType=TINYINT},
      gmt_modified = NOW(),
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
        AND is_deleted = 0
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.xc.entity.DO.LogLoginDO">
    update log_login
    <set>
      <if test="loginUserId != null">
        login_user_id = #{loginUserId,jdbcType=BIGINT},
      </if>
      <if test="loginIp != null">
        login_ip = #{loginIp,jdbcType=VARCHAR},
      </if>
      <if test="loginTime != null">
        login_time = #{loginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="loginUserIdentifier != null">
        login_user_identifier = #{loginUserIdentifier,jdbcType=VARCHAR},
      </if>
      <if test="isAdmin != null">
        is_admin = #{isAdmin,jdbcType=TINYINT},
      </if>
        gmt_modified = NOW(),
    </set>
      where id = #{id,jdbcType=BIGINT} AND is_deleted = 0
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.xc.entity.DO.LogLoginDO">
    update log_login
    set login_user_id = #{loginUserId,jdbcType=BIGINT},
      login_ip = #{loginIp,jdbcType=VARCHAR},
      login_time = #{loginTime,jdbcType=TIMESTAMP},
      login_user_identifier = #{loginUserIdentifier,jdbcType=VARCHAR},
      is_admin = #{isAdmin,jdbcType=TINYINT},
      gmt_modified = NOW()
      where id = #{id,jdbcType=BIGINT} and is_deleted = 0
  </update>
</mapper>